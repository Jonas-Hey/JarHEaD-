== Job Approval ==

For general information about  jobs see [[Help:Jobs]].

The Job Approval feature allows to delay executions of actions until a privileged user approves it.

=== Widgets ===

To make use of the Job Approval, a special set of widgets needs to be used.

==== CodeExecutionWithApproval ====

This is an extension of the [[Help:CodeExecution|CodeExecutionWidget]], that instead of executing the action directly, it is postponed until it gets approved.

Compared to the CodeExecutionWidget, this widget has the following additional options:
* '''approver''': This can be set to the username of the user that is allowed to approve actions triggered from the widget. This has preference over the ''approverRole''.
* '''approverRole''': This can be set to the role that is allowed to approved actions triggered from this widget. Every user in that role has the permission to approved those actions.
* '''description''': A description for the action. This is to help the approver get an understanding of the actions to confirm.

==== JobApprovalWidget ====

This is the widget used to approve or decline pending actions. 

===== Configuration Settings =====

{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = 'com.fluidops.iwb.ecm.widget.JobApprovalWidget'
}}

=== Framework ===

Using the ''CodeExecutionWithApproval'' widget, the called methods are automatically suspended until approved. For actions triggered differently, the approval has to be set manually. This can be done with the method <code>requireApproval</code> of the class <code>com.fluidops.iwb.ecm.JobApproval</code>. The arguments represent the same options as configured in the widget:
* '''description''': This is the description of the task, that can be seen by the approver.
* '''codeConfig''': This is an instance of <code>CodeExecution.Config</code> and represents the method to call. This includes the class, method, signature and arguments. Note, that for this to work all arguments need to be <code>Serializable</code>.
* '''approver''': Definition of who can approve the task. instance of either <code>ApproverUser</code> or <code>ApproverRole</code>.