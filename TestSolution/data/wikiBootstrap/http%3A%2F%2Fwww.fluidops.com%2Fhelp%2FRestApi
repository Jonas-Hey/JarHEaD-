== REST API ==

The previous section explained how the API of the {{PRODUCT}} is available via the CLI.
While the CLI is great for scripting and ad-hoc use, the REST API should be used
for programmatic access to the functionality.

The REST API supports the following formats:

* <a href="/REST/JSON">/REST/JSON</a>
* <a href="/REST/XML">/REST/XML</a>

Follow these links (login required) to get to the REST API user interface. This page lets you:

* navigate to the various sub-sections of the API (this link <a href="/REST/JSON/getSemanticService/">/REST/JSON/getSemanticService/</a> brings you to the main information workbench service for instance)
* explore a list of calls within the service
* inspect and enter the call parameters
* invoke the service
* show the request URL such that it can be copies and pasted into your favorite REST client

=== Scripting via REST ===

The REST API can be used to retrieve data from clients. Popular REST clients are wget or curl. The following example shows a wget command line which runs a query to retrieve the system's version (note that the parameter syntax can be assembled via the GUI introduced above):

<source>
wget --auth-no-challenge --http-user=admin --http-password=iwb --no-check-certificate 
"https://localhost:50443/REST/JSON/?method=version&params={}&id=1"
</source>

The arguments are as follows:

{| class="sortable wikitable" 
! Argument
! Description
|-
| --auth-no-challenge || makes sure the wget command sends the HTTP basic authentication header with the request
|-
| --http-user|| the user name which has query privileges
|-
| --http-password || the user's password
|-
| --no-check-certificate || makes sure wget accepts a self signed certificate
|-
|   || the REST URL indicating the service base URL, the service "folder", the API method and the parameters
|}
