=== Actionable Result Widget ===

==== Functionality ====
{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = 'com.fluidops.iwb.widget.ActionableResultWidget'
| type = 'DESCRIPTION'
}}
Go back to [[Help:Widgets | Widgets ]]

==== Configuration Settings ====

{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = 'com.fluidops.iwb.widget.ActionableResultWidget'
}}

===== Action configuration=====

{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = 'com.fluidops.iwb.widget.CodeExecutionWidget'
}}

===== User Input Configuration =====

{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = 'com.fluidops.iwb.widget.BaseExecutionWidget$UserInputConfig'
}}


==== Examples ====

ActionableResult is a [[Help:TableResult| table result]] with code execution support, and uses [[Help:CodeExecution| code execution]] functionality for executing code. The widget can be used to invoke actions using row-bindings as well as column values for multiple selected rows from the table as additional input. 

Bindings from the table (i.e., the query result) can be accessed via the "?:varName" notation, where varName must be a valid projection in the query result. For each action basically any of the functionalities available in the [[Help:CodeExecution| code execution service]] can be used. Please refer to the documentation of that widget for further details.

Note: If the user does not have privileges to use the [[Help:CodeExecution|CodeExecutionWidget], the usual [[Help:TableResult|TableResultWidget] is rendered.

<br/>
'''a) Example 1: row actions'''

This example depicts a simple table result with two row actions using the ''name'' and ''city'' values from the corresponding row as input. In this example the referenced service just alerts the selected item. The signature of the service for the below action looks like ''helloWorld(CodeExecutionContext, Value, String)''

<source>
{{#widget: com.fluidops.iwb.widget.ActionableResultWidget
| query = 'SELECT ?name ?city WHERE { ?? :name ?name . ?? :city ?city }'
| rowActions = {{ 
      {{ 
         label='Hello' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='helloWorld' | 
         args= {{ '?:name' | 'someConst' }} | 
         render='btn' | 
         passContext = true
      }} |
      {{ 
         label='Do Something' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='helloWorld' | 
         args= {{ '?:city' | 'someConst' }} | 
         render='btn' | 
         passContext = true
      }}
   }}
}}
</source>

<img src="../images/help/ActionableResult_row_action.png"/>

<br/>
'''b) Example 2: selected row actions'''

This example depicts a simple selectable table result with two selected row actions. In this example the referenced service just alerts the values of selected items. The signature of the service for the below action looks like ''testColumnActions(CodeExecutionContext, List<nowiki><Value></nowiki>)''

<source>
{{#widget: com.fluidops.iwb.widget.ActionableResultWidget
| query = 'SELECT ?name ?city WHERE { ?? :name ?name . ?? :city ?city }'
| selectedRowActions = {{ 
      {{ 
         label='Show selected names' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='testColumnActions' | 
         args= {{ '?:name' }} | 
         render='btn' | 
         passContext = true
      }} |
      {{ 
         label='Show selected cities' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='testColumnActions' | 
         args= {{ '?:city' }} | 
         render='btn' | 
         passContext = true
      }}
   }}
}}
</source>

<img src="../images/help/ActionableResult_selected_row_action.png"/>

<br/>
'''c) Example 3: row actions with user input'''

This example shows a table with one row action for the variable ''name'' . When clicking on the button, a input form for the variable ''formInput'' shows up. After submitting the form, the user input as well as the corresponding name is alerted.

<source>
{{#widget: ActionableResult
 | query = 'SELECT ?name WHERE { ?? :name ?name }'
 | rowActions = {{ 
      {{ label = 'Say hello'
       | clazz = 'com.fluidops.iwb.widget.ActionableResultWidget'
       | method = 'helloWorld'
       | args = {{ '?:name' | '%formInput' }}
       | userInput = {{ 
            {{ name = 'formInput'
             | componentType = 'SIMPLE'
            }} }}
       | passContext = true
      }} }}
}}
</source>


'''d) Example 4: ActionableResultWidget with a hidden column '''

This widget shows a table with 1 column: 'name'. Under the table you should see two buttons labelled 'Show selected names' and 'Show selected cities'.  
The button 'Show selected cities' should work even though the corresponding column is hidden.

<source>
{{#widget: com.fluidops.iwb.widget.ActionableResultWidget
| query = 'SELECT ?name ?city WHERE { ?? :name ?name . ?? :city ?city }'
| columnConfiguration = {{ 
      {{ variableName = 'city'
       | visibility = 'HIDDEN'
      }} }}
| selectedRowActions = {{ 
      {{ 
         label='Show selected names' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='testColumnActions' | 
         args= {{ '?:name' }} | 
         render='btn' | 
         passContext = true
      }} |
      {{ 
         label='Show selected cities' | 
         clazz='com.fluidops.iwb.widget.ActionableResultWidget' | 
         method='testColumnActions' | 
         args= {{ '?:city' }} | 
         render='btn' | 
         passContext = true
      }}
   }}
}}
</source>


'''e) Example 5: ActionbaleResultWidget where the visibility of the action depends on a column value

It is possible to control the visibility of an action using a value from the given table row. This can be done by pointing ''hideAction'' to the existing column as ''?:columnName'': if the effective value equals ''true'', the action is not shown for the respective row.

Note that you can also hide the referenced column in the rendered table by setting ''visibility'' to ''HIDDEN''.

<source>
{{#widget: ActionableResult | 
 query = 'SELECT ?name ?isHidden WHERE {  
  VALUES (?name ?isHidden) {
   ( "Max"  "true"^^xsd:boolean )
   ( "Erika"  "false"^^xsd:boolean ) } 
}'
 | rowActions = {{ 
      {{ clazz = 'com.fluidops.iwb.widget.ActionableResultWidget'
       | method = 'helloWorld'
       | hideAction = '?:isHidden'
       | passContext = true
       | render = 'btn'
       | label = 'Hello World'
       | args = {{ '?:name' | 'someConst' }}
      }} }}
 | columnConfiguration = {{ 
      {{ variableName = 'isHidden'
       | visibility = 'HIDDEN'
      }} }}
}}
</source>

'''f) Example 6: ActionableResultWidget with a partial reload of the page

Sometimes after invoking an action the content has refreshed. This is possible by setting ''onFinish'' to ''reload'' (which will reload the entire page) or by setting ''onFinish'' to ''reloadComponent'' (which reloads the next reloadable component in the component tree). If the actionable result widget is rendered with ''asynch=true'', only the actionable result widget table will reload.

See [[Help:CodeExecution| code execution widget]] example ''l'' for further details.

<source>
{{#widget: ActionableResult | 
 query = 'SELECT ?now WHERE { BIND(NOW() AS ?now) }'
 | rowActions = {{ 
      {{ clazz = 'com.fluidops.iwb.widget.ActionableResultWidget'
       | method = 'helloWorld'
       | passContext = true
       | render = 'btn'
       | label = 'Reload'
       | args = {{ '?:now' | 'someConst' }}
       | onFinish = 'reloadComponent'
      }} }}
 | columnConfiguration = {{ 
      {{ variableName = 'now'
       | valueResolver = 'DATETIME'
      }} }}
 | asynch = true
}}
</source>