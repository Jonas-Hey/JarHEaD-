== Authentication ==

{{PRODUCT}} implements a powerful security concept that supports different directory services. The authentication mechanism is associated with a role concept, which is explained in section [[Help:UserManagement|User Management]]. In this chapter we highlight the different authentication modules and give best practices for their configuration.

=== Authentications Modules ===

An ''authentication module'' authenticates users against a specific directory service. {{PRODUCT}} supports the following authentication modules:

* Windows Users
* LDAP Authentication
* {{PRODUCT}} Users

These modules can be combined into a so-called ''authentication chain''. {{PRODUCT}} evaluates the modules in the configured order until one module succeeds or all of them have failed. If one of the modules is not configured properly it is ignored and the evaluation will continue with the next module in the chain. 

==== Windows Users ====

The module ''WinNetUse'' allows authentication for local and domain Windows users. During the installation of {{PRODUCT}} a Windows group is created for each of the predefined roles. Please see section [[Help:UserManagement|User Management]] for more information on the role concept. To assign a Windows user to a {{PRODUCT}} role, just add him to the corresponding Windows group. As shown in the following example, also domain groups can be added to the local Windows groups:

<img src="../images/help/WindowsGroups.png"/>

On some Windows systems issues can arise when running {{PRODUCT}} with a local user and at the same time allowing domain users to authenticate. Therefore it is recommended to run the service with a domain user. This domain user must have administrator rights on the system where {{PRODUCT}} is installed, but he does not need to have special rights on the domain.

==== LDAP Authentication ====

This module allows to authenticate users against a LDAP server. The location of the server is configured with the parameter ''authConfigOptions''. You can either use the [[Setup:Authentication|Authentication Wizard]] described below or compile the configuration string manually:

* ''ldap.url'' Specifies the LDAP server's URL, e.g. ldap://my.ldap.server:389 (Note: Specifying the LDAP endpoint via IP address is not supported, but only via fully qualified domain name). If authenticating against an Active Directory where the users are in the global catalog, port 3268 needs to be used.
* ''ldap.domain'' (OPTIONAL) Specifies the LDAP domain. If specified, only users with the exact domain are allowed.
* ''ldap.admingroup'' (OPTIONAL) Specifies the admin group (defaults to ''Administrators'') within the domain. Can be used to specify other admin groups (e.g. if localized names are in place)

Example configuration string:

<source>
authConfigOptions=ldap.url\=ldap\://mt.company.corp\:389, ldap.domain\=my.company.corp, ldap.guestgroup\=LDAPGuests, ldap.admingroup\=LDAPAdmins:LDAPManagement, ldap.sesusergroup\=LDAPExternalUsers
</source>

Using the LDAP module, it is possible to customize the rights of user groups. To use authentification each LDAP group that shall be granted access must be mapped to a {{PRODUCT}} group. In fact, this mapping is a prerequisite for the user being able to login into the system.

Now assume the following use case: we have two LDAP groups, SUPPORT_USER and REPORTING_USER. Further assume that both should be associated with the guest group, but in {{PRODUCT}} both should be equipped with different rights. For instance, the SUPPORT_USER group should have read-access exclusively to the plain wiki text start page and all wiki pages in the support namespace, while the REPORTING_USER group should have read access exclusively to the plain wiki text start page and all wiki pages in the report namespace. In the LDAP configuration, we define the following mapping:

<source>
ldap.guestgroup=SUPPORT_USER:REPORTING_USER
</source>

As a result of this configuration, we obtain the following group-to-role mapping:

* Group ''SUPPORT_USER'' is mapped to roles ''{{PRODUCT}} Guest'' and ''SUPPORT_USER''
* Group ''REPORTING_USER'' is mapped to roles ''{{PRODUCT}} Guest'' and ''REPORTING_USER''

Since LDAP groups are mapped to corresponding {{PRODUCT}} roles, ACLs can be used to customize the access rights of the groups. Please see the section on [[Help:AccessControl|Access Control]] for details on the ACL mechanism.

{{PRODUCT}} also supports nested LDAP groups. For example, a user in group SUPER_ADMINS which is listed in the parent group ADMINS can log in as an admin. This feature has to be configured via the ''ldapMaxGroupRecursionDepth'' config parameter. The value is an integer which specifies the maximum search depth in teh LDAP tree. The defaul is 0 which means the feature is turned off by default.

==== SSH Authentication ====

The SSH module checks the authentication by logging into an SSH daemon. Upon successful authentication,
the user's groups are retrieved by issuing the "groups" command.
By default, the SSH daemon on localhost is contacted. A remote SSH daemon can be specfied via the config option "authSSHServer".

==== {{PRODUCT}} Users ====

The third authentication module allows to authenticate local {{PRODUCT}} users.  Within the ''authConfigOptions'' parameter an optional value can be specified, the ''local.domain'' value. When this value is set, the user needs to specify this value as domain during authentication.

Since version 6.1. the passwords of local users are hashed by default. To automatically convert the encrypted passwords of users created in older versions, please use the respective functionality on the [[Setup:Upgrade| upgrade page]]. Note: the [[Help:SystemConfiguration| configuration]] setting ''hashUserPasswords'' can be used to change the default behavior.

=== Editing Authentication Parameters ===

==== System Configuration ====

The authentication chain is configured by the parameter ''authConfigName'' in the security tab of the [[Admin:Config|System Configuration]]. {{PRODUCT}} expects a comma-separated list of authentication modules:

{|
| '''Module'''
| '''Parameter'''
|-
| {{PRODUCT}} Users
| Local
|-
| LDAP Authentication
| LDAP
|-
| Windows Users
| WinNetUse
|}

By default the authentication chain ''Local,LDAP,WinNetUse'' is configured.

The individual authentication modules are configured using the ''authConfigOptions'' parameter. Please see the section above for more details.

==== Authentication Wizard ====

While authentication parameters can be edited directly in the configuration file, it can also be done in a more convenient way using the [[Setup:Authentication|authentication setup interface]].
There you can fill in the values of required properties. On submitting the form, the entered values will be translated into the corresponding configuration properties (''authConfigName'' and ''authConfigOptions'') and saved in the system configuration file.

<img src="../images/help/SetupAuthentication.png" style="1px solid black"/>

You can test the saved authentication configuration parameters using the ''Test Authentication'' button: the system will try to authenticate with the provided username and password and return the result. 
However, the current user will not be logged out of the system, and the session will not be terminated.
<br/>
<br/>
When authenticating users including the domain part (e.g. ''myuser@mydomain.corp'' instead of just ''myuser''), the ''DIGEST-MD5'' method cannot be used. In this case authentication with plain text passwords needs to be enabled using the config parameter ''authenticateLdapUsingPlaintext''.
<br> <b>Note: This should only be done when using ''ldaps'' to avoid transmitting passwords over the wire without encryption!</b>

<img src="../images/help/AuthenticateLdapUsingPlaintextSetup.png" style="1px solid black"/> 

=== Caching ===

All the operations that can be performed within the system are available over a unified API. For every module, you can specify which user role is allowed to execute which specific module. To avoid an authentication for every single call we added a caching mechanism. The parameter ''authCacheTimeSeconds'' can be used to configure how long to cache a successful login before needing to authenticate the user again to check the user role.

=== Certificate based client authentication ===

{{PRODUCT}} supports HTTP SSL certificate based client authentication. If enabled, it is activated on an additional port in the web server (default: 50444), and clients must provide a valid certificate that is accepted by the webserver.

==== Configuration ====

Certificate based client can be configured using the following settings:

{| class="wikitable"
|-
! Settings !! Description 
|-
| enableHttpSslCert || Enable HTTP SSL certificate based authentication for the webserver. If enabled, certificate based authentication is activated on the configured httpSslCertPort.
|-
| httpSslCertPort || Secure (SSL) HTTP port for certificate based authentication to the web interface. Default: 50444
|-
| httpTrustStore || SSL TrustStore used by the webserver (e.g. for client based certificate authentication, see enableHttpSslCert setting). Default: etc/truststore
|-
| httpTrustStorePassword || SSL TrustStore password used by the webserver
|-
| httpKeyStore || SSL KeyStore used by the webserver. Default: etc/keystore
|-
| httpKeyStorePassword || SSL KeyStore password used by the webserver.
|}

By default, the {{PRODUCT}} ships an empty TrustStore (password: "changeit"). In order to establish trust, a valid CA certificate must be added to the TrustStore; alternatively, an existing trust store can be used. Note: certificate based authentication can only be activated if the configured TrustStore contains at least one valid certificate. According to the protocol, clients require a certificate that is signed by a trusted CA.

In order to import a public CA key to an existing TrustStore, the following command can be used

<pre>
keytool -import -v -trustcacerts -alias my_ca -file ca.crt -keystore truststore
</pre>

=== SAML ===

SAML support is possible via the <a href="https://appcenter.fluidops.com/resource/?uri=http%3A%2F%2Fwww.fluidops.com%2Fapplication%2FWebSSO">Web SSO App</a>.